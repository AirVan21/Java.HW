Code review HW8
Ход действий : 

1) Изначально просмотрен весь скопированный код 
2) В Main.java исправлена ошибка типа параметра - int заменено на Integer, т.к. здесь нельзя использовать примитивные типы
3) Переходим на рассмотрение MyPriorityQueue.java для того, чтобы понять что делает код в main'е
4) Используемый тип-параметр "T" заменён на "TypeValue" из - за ненависти к однобуквенным обозначениям
5) Переименован класс ListElement на QueueElement
6) Расставлены пустые строчки между методами класса QueueElement
7) Комментарии "//" заменены на javadoc конструкции
8) В конструкторе изменены названия параметров
9) Переписаны комментарии к методам
10) "Заполняем" конструктор элемента очереди (который без параметров 
12) В методе enqueue переменная "l" заменена на переменную "current"
13) В методе enqueue в условном операторе меня ">" на "<"
14) Условие оператора "if" из метода dequeue изменено 
15) Добавлена ветка "else" в условный оператор метода dequeue
16) В dequeue изменён вид бросаемого исключения
17) В dequeue исправлена ошибка установления нового главы очереди (head)
18) Переходим к юнит тестам.
19) В тесте для enqueue делаем разные добавляемы значения, чтобы не запутаться (и избавляемся от ненужной переменной "ret")
20) Пишем правильные assert'ы (и в enqueue и в dequeue)
21) Замечаем, что при одинаковых приоритетах 2 элеметов очереди, элемент, добавляемый позже, ставится перед элеметом с таким же приоритетом , добавленным ранее ( в силу строгого неравенства) // замечание по тексту теста для dequeue
22) Правильно описываем тест для проверки бросаемого исключения
23) Возвращаемся в main и переписываем output более компактно
24) Коментарии к исключению добавлены

P.S. по большому счёту, классу QueueElement методы можно было и не писать. 


